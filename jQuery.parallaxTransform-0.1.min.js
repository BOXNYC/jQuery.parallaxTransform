/**
	* parallaxTransform jQuery Plugin v0.1
	* Author:
	* 	Joseph Weitzel
	*			joe@box.biz BOX Creative SoHo NYC
	* $().parallaxTransform(options)
	* 	@options (object) :
	* 		@percentZoom (integer) : Percent (0-100)% ammount of scale and transulation
	* 													of element's transform. Default 20%.
	* 		@process (function) : Method that allows the alterization of the translateY
	* 													value. This can provide an option to adjust the value
	* 													or clamp it. If returned false, the element it attains
	* 													to will not be applied with the CSS transform.
	* 		@extentions (array) : List of extentions for browsers not fully supporting
	* 													CSS3 transform's translate3d and scale functions.
	* 		@parentCSS (object) : CSS attributes to be applied to each elements parent.
	* 													Defaults to {	overflow: 'hidden',	display: 'block' }.
	* 		@scrollElement (DOM element or string selector) : jQuery selector for the
	* 													element used for the scroll listener event. Default is
	* 													document element.
	* 		@scrollContainer (DOM element or string selector) : jQuery selector for the
	* 													element used to specify a scrollable height. Default is
	* 													window element.
	* 		@updateOnImgLoad (boolean) : If set to true and each selector is an image, then
	* 													when each image load event occurs, parallax is updated.
	* 													Default is true.
	* 		@checkScrollable (boolean) : If set to true and an item's height is less than
	* 													the scrollContainer's height, then transformation CSS
	* 													is removed. Default is true.
	* 		@setTransform (boolean) : If set to true, CSS transforms will occur automatically.
	* 													This is only usefull when wanting to set your action using
	* 													the data supplied per element when binding on the custom
	* 													"parallaxTransform" event that is triggered per item.
	* 													Defaults to true.
	*/
!function(r){r.fn.parallaxTransform=function(e){var t=r(this),n=function(){if(!window.getComputedStyle)return!1;var r,e=document.createElement("p"),t={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};document.body.insertBefore(e,null);for(var n in t)void 0!==e.style[n]&&(e.style[n]="translate3d(1px,1px,1px)",r=window.getComputedStyle(e).getPropertyValue(t[n]));return document.body.removeChild(e),void 0!==r&&r.length>0&&"none"!==r}();if(!n)return t;e=r.extend({percentZoom:20,process:!1,extentions:["moz","webkit","ms","o"],parentCSS:{overflow:"hidden",display:"block"},scrollElement:document,scrollContainer:window,updateOnImgLoad:!0,checkScrollable:!0,setTransform:!0},e);var o=r(e.scrollElement),s=r(e.scrollContainer),a=0,i=e.percentZoom/100,l=e.percentZoom/2,c=i+1,f=[];return s.on("resize",function(){a=s.height()/2,f=[],t.each(function(){var t=r(this),n=t.parent().css(e.parentCSS),o=n.outerHeight()/2,s=n.offset().top;f.push({y:s,halfHeight:o,$item:t})}),o.trigger("scroll")}).trigger("resize"),o.on("scroll",function(){var t=o.scrollTop();r.each(f,function(r,n){var o=n.y+n.halfHeight-(t+a),s=n.halfHeight-a,i=o/s,f=i*l;if("function"==typeof e.process){var m=e.process(f,n);if(m===!1)return!1;f=m}if(e.checkScrollable&&a<=n.halfHeight){n.$item.css("transform","");for(var u in e.extentions)n.$item.css("-"+e.extentions[u]+"-transform","");return!0}var d={transform:"translate3d(0,"+f+"%,0) scale("+c+")"};for(var u in e.extentions)d["-"+e.extentions[u]+"-transform"]=d.transform;e.setTransform&&n.$item.css(d),n.$item.trigger("parallaxTransform",{css:d,translateY:f,scale:c,scrollPercent:i})})}).trigger("scroll"),e.updateOnImgLoad&&t.each(function(){var e=r(this);return e.is("img")?void e.load(function(){s.trigger("resize")}):!0}),t}}(jQuery);
